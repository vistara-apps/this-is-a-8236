name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NODE_OPTIONS: --max-old-space-size=4096

    - name: Deploy to Vercel (Production)
      if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && secrets.VERCEL_TOKEN != ''
      continue-on-error: true
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: Deploy to Vercel (Preview)
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' && secrets.VERCEL_TOKEN != ''
      continue-on-error: true
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--no-wait'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: Comment PR with deployment URL
      if: github.event_name == 'pull_request' && secrets.VERCEL_TOKEN != ''
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo
          });

          const latestDeployment = deployments[0];
          if (latestDeployment) {
            const deploymentUrl = `https://${latestDeployment.environment}.vercel.app`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview Deployment Ready!**
              \n\nðŸ“± **URL:** ${deploymentUrl}
              \n\nThis preview will be automatically updated when you push new commits to this PR.`
            });
          }
          
    - name: Build Success Notification
      if: github.event_name == 'pull_request'
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… **Build Successful!**
              \n\nThe application has been built successfully. To enable automatic deployments, configure the following secrets in your repository:
              \n- \`VERCEL_TOKEN\`
              \n- \`VERCEL_ORG_ID\`  
              \n- \`VERCEL_PROJECT_ID\`
              \n\nYou can also deploy manually by running \`npm run build\` and serving the \`dist\` folder.`
            });
          } catch (error) {
            console.log('Could not comment on PR:', error.message);
          }
