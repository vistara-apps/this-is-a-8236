name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NODE_OPTIONS: --max-old-space-size=4096
        # Provide placeholder values for build-time validation
        VITE_SUPABASE_URL: https://placeholder.supabase.co
        VITE_SUPABASE_ANON_KEY: placeholder_key
        VITE_OPENAI_API_KEY: placeholder_key
        VITE_STRIPE_PUBLISHABLE_KEY: pk_test_placeholder
        
    - name: Check Vercel secrets
      id: check-secrets
      run: |
        if [ -n "${{ secrets.VERCEL_TOKEN }}" ] && [ -n "${{ secrets.VERCEL_ORG_ID }}" ] && [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
          echo "vercel-configured=true" >> $GITHUB_OUTPUT
        else
          echo "vercel-configured=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Deploy to Vercel (Production)
      if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && steps.check-secrets.outputs.vercel-configured == 'true'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Deploy to Vercel (Preview)
      if: (github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master') && steps.check-secrets.outputs.vercel-configured == 'true'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--no-wait'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Comment PR with deployment URL
      if: github.event_name == 'pull_request' && steps.check-secrets.outputs.vercel-configured == 'true'
      continue-on-error: true
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const latestDeployment = deployments[0];
          if (latestDeployment) {
            const deploymentUrl = `https://${latestDeployment.environment}.vercel.app`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Preview Deployment Ready!**
              \n\nüì± **URL:** ${deploymentUrl}
              \n\nThis preview will be automatically updated when you push new commits to this PR.`
            });
          }
          
    - name: Build Success Notification
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const vercelConfigured = '${{ steps.check-secrets.outputs.vercel-configured }}' === 'true';
          let message = `‚úÖ **Build Successful!**\n\nThe application has been built successfully.`;
          
          if (vercelConfigured) {
            message += `\n\nüöÄ Vercel deployment is configured and will be attempted.`;
          } else {
            message += `\n\n‚öôÔ∏è To enable automatic deployments, configure the following secrets in your repository:
            \n- \`VERCEL_TOKEN\`
            \n- \`VERCEL_ORG_ID\`  
            \n- \`VERCEL_PROJECT_ID\`
            \n\nYou can also deploy manually by running \`npm run build\` and serving the \`dist\` folder.`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
